---
- name: Configure machine with AtomicRedTeam
  hosts: windows

  # Manual Tasks
  # - Restore the vm
  # - Configure Remote Desktop Connection
  # - Disable "Require computers to use Network Level Authentication" to connect
  # - Configure WINRM with powershell:
  #   [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
  #   $url = "https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1"
  #   $file = "$env:temp\ConfigureRemotingForAnsible.ps1"
  #   (New-Object -TypeName System.Net.WebClient).DownloadFile($url, $file)
  #   powershell.exe -ExecutionPolicy ByPass -File $file
  # - Check WinRm Listners with: winrm enumerate winrm/config/Listener
  # - Execute this playbook with: ansible-playbook atomic-redteam.yml -i hosts -u Admin -k
  # - Import the AtomicRedTeam with: Import-Module "C:\AtomicRedTeam\invoke-atomicredteam\Invoke-AtomicRedTeam.psd1" -Force
  # - Use it :)

  tasks:
  - name: Disable Windows Defender For Endpoint - Create Key
    ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Real-Time Protection
  - name: Disable Windows Defender For Endpoint - Add Value
    ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Real-Time Protection
      name: DisableRealtimeMonitoring
      data: 1
      type: dword
  - name: Disable Windows Defender for Endpoint using the GUI
    pause:
  - name: Ensure that WinRM is started when the system has settled
    win_service:
      name: WinRM
      start_mode: auto
  - name: Reboot the machine
    ansible.windows.win_reboot:
  - name: Install Invoke-AtomicRedTeam with Atomics
    ansible.windows.win_powershell:
      script: |
        Install-PackageProvider -Name NuGet -Force
        IEX (IWR 'https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/install-atomicredteam.ps1' -UseBasicParsing);
        Install-AtomicRedTeam -getAtomics -Force